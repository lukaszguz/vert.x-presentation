buildscript {
    ext {
        kotlinVersion = '1.3.50'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}
plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}
apply plugin: 'kotlin'
ext {
    kotlinVersion = '1.3.50'
    vertxVersion = '3.8.1'
    junitJupiterEngineVersion = '5.2.0'
}

repositories {
    mavenLocal()
    jcenter()
}

group = 'pl.guz'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def mainVerticleName = 'pl.guz.vertx.m2.DeployVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"
    implementation "io.vertx:vertx-jdbc-client:$vertxVersion"

    implementation "io.vertx:vertx-config:$vertxVersion"
    implementation "io.vertx:vertx-config-yaml:$vertxVersion"
    implementation "io.vertx:vertx-config-git:$vertxVersion"

    compile "io.vertx:vertx-service-discovery-bridge-consul:$vertxVersion"

    compile "io.vertx:vertx-micrometer-metrics:$vertxVersion"
    compile "io.micrometer:micrometer-registry-influx:1.1.0"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    compile "org.hsqldb:hsqldb:2.3.4"
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.zipkin.brave:brave-instrumentation-vertx-web:5.5.0'

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange", "--java-opts=-Dvertx.debug.port=5005"]
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}